plugins {
	id 'fabric-loom' version '1.8-SNAPSHOT'
	id 'com.github.johnrengelman.shadow' version '8.1.1'
	id "dev.yumi.gradle.licenser" version "1.1.+"
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

license {
	rule file('HEADER')
	include '**/*.java'
}

repositories {
	mavenLocal()
	mavenCentral()
	maven {
		name 'Gegy'
		url 'https://maven.gegy.dev'
		content {
			includeGroup 'dev.lambdaurora'
		}
	}
	maven {
		name 'TerraformersMC'
		url 'https://maven.terraformersmc.com/'
		content {
			includeGroup 'com.terraformersmc'
		}
	}
}

loom {
	accessWidenerPath = file("src/main/resources/lambdabettergrass.accesswidener")
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	include modImplementation("dev.lambdaurora:spruceui:${project.spruceui_version}")

	modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}") {
		transitive = false
	}

	shadow 'com.electronwill.night-config:core:3.6.3'
	modImplementation 'com.electronwill.night-config:core:3.6.3'
	shadow 'com.electronwill.night-config:toml:3.6.3'
	modImplementation 'com.electronwill.night-config:toml:3.6.3'
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

shadowJar {
	dependsOn jar
	configurations = [project.configurations.shadow]
	destinationDirectory.set(file("${project.buildDir}/devlibs"))
	archiveClassifier.set('dev')

	relocate 'com.electronwill.nightconfig', 'dev.lambdaurora.lambdabettergrass.shadow.nightconfig'
}

remapJar.dependsOn(shadowJar)

// Configure the maven publication.
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java

			pom {
				name = 'LambdaBetterGrass'
				description = 'Adds actual better grass to the game.'
			}
		}
	}

	repositories {
		mavenLocal()
		maven {
			name = 'BuildDirLocal'
			url = "$buildDir/repo"
		}
	}
}
